[project]
name = "project-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "cloudpathlib>=0.19.0",
  "hydra-colorlog>=1.2.0",
  "hydra-core>=1.3.2",
  "kaggle>=1.6.17",
  "lightning>=2.4.0",
  "neptune>=1.12.0",
  "polars>=1.9.0",
  "rich>=13.9.2",
  "wandb>=0.18.3",
  "pandas>=2.2.3",
  "litserve>=0.2.3",
  "typeguard",
]

[project.optional-dependencies]
test = ["pytest>=6.2.4"]
docs = [
  "mkdocs-autorefs==1.2.0",
  "mkdocs-gen-files==0.5.0",
  "mkdocs-get-deps==0.2.0",
  "mkdocs-material-extensions==1.3.1",
  "mkdocs-material==9.5.41",
  "mkdocs-mermaid2-plugin==1.1.1",
  "mkdocs==1.6.1",
  "mkdocstrings-python==1.12.1",
  "mkdocstrings==0.26.2",
  "pymdown-extensions==10.11.2",
  "mkdocs-same-dir",
]
lint = [
  "pre-commit>=4.0.1",
  "mypy>=1.14.1",
  "pandas-stubs>=2.2.3.241126",
  "types-pyyaml>=6.0.12.20241230",
  "types-regex>=2024.11.6.20241221",
  "types-requests>=2.31.0.6",
  "types-tqdm>=4.67.0.20241221",
]
cpu = ["torch>=2.5.0", "torchtyping>=0.1.5", "torchvision"]
gpu = ["torch>=2.5.0", "torchtyping>=0.1.5", "torchvision"]


[tool.uv]
dev-dependencies = ["pytest>=8.3.3"]

prerelease = "allow"
find-links = [
  "https://storage.googleapis.com/jax-releases/jax_releases.html",
  "https://storage.googleapis.com/jax-releases/libtpu_releases.html",
  "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html",
  "https://storage.googleapis.com/libtpu-releases/index.html",
]

conflicts = [ # so uv will resolve the groups independently
  [{ extra = "gpu" }, { extra = "cpu" }],
]

package = true # This makes uv automatically add deepchain_mrna to PYTHONPATH

[[tool.uv.index]]
name = "pytorch-cuda11"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = [
  { index = "pytorch-cuda11", extra = "gpu" },

  { index = "pytorch-cpu", extra = "cpu" },
]


[build-system]
requires = ["setuptools>=42"]
build-backend = "setuptools.build_meta"


[tool.mypy]
python_version = "3.10"
#mypy_path = ""
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
allow_redefinition = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
strict_optional = true
strict_equality = true
explicit_package_bases = true
follow_imports = "normal"
ignore_missing_imports = false


# Explicitly disable type checking on problematic modules
[[tool.mypy.overrides]]
module = [
  "cloudpathlib.*", # AnyPath is not properly typed

]
follow_imports = "skip"
ignore_missing_imports = true

# Explicitly ignore modules that donâ€™t have type stubs
[[tool.mypy.overrides]]
module = [
  "torch_xla.*",
  "matplotlib.*",
  "scipy.*",
  "networkx.*",
  "seaborn.*",
  "neptune.*",
  "google.cloud.*",
  "sklearn.*",
  "tensorboard.*",
  "tensorboardX.*",
  "torchvision.*",
  "pydot.*",
  "joblib.*",
  "tokenizers.*",
  "transformers.*",
  "wandb.*",
  "litserve.*",
  "kaggle.*",
  "torchtyping.*",
]
ignore_missing_imports = true
